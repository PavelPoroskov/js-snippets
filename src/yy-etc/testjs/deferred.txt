Предположим, что есть следующий код:
deferred()
.then(function(res) { console.log(200, res); return "lab"; })
.then(function(res) { console.log(100, res); })
.resolve("web")

В результате его выполнения в консоль будет выведено следующее:
200 web
100 lab

Необходимо реализовать функцию deferred().

Дополнительно.
Реализовать возможность передачи других deferred в качестве return к then функции.

deferred()
	.then(function(res) {
const d = deferred();
console.log(200, res);
setTimeout(function() {d.resolve("lab");}, 300000);
return d;
})
	.then(function(res) { console.log(100, res); })
	.resolve("web")
	
В результате его выполнения в консоль будет выведено следующее:
200 web
// in 5 minutes
100 lab

function defered() {
	let arr = [];
	let res
let iArr 
	let _resolved = false;
	return {
		then: (fn) => arr.push(fn),
		resolve: (str) => {
				
			res = str
			iArr = 0
			
			return nextStep() {
				if (iArr < arr.length) {
				res = arr[iArr].resolve(res);
				iArr+=1;
}
}

			for (let  i=0; i<arr.length; i +=1) {
				res = arr[i].resolve(res);
			}
			_resolved = true;
},
resolved: () => _resolved
	}
}
